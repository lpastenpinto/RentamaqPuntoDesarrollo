@model RentaMaq.Models.equipos

@{
    ViewBag.Title = "tiempo medio para reparar de equipo";
    string FECHA1 = "", FECHA2 = "";

    DateTime Inicio = (DateTime)ViewBag.Inicio;
    DateTime Termino = (DateTime)ViewBag.Termino;
    string TipoAgrupacion = ViewBag.TipoAgrupacion;

    FECHA1 = Inicio.Day + "/" + Inicio.Month + "/" + Inicio.Year;
    FECHA2 = Termino.Day + "/" + Termino.Month + "/" + Termino.Year;

    List<RentaMaq.Models.tiempoMedioParaReparar> ListaTiempoMedioParaReparar = (List<RentaMaq.Models.tiempoMedioParaReparar>)ViewBag.TiempoMedioParaReparar;

    List<DateTime> ListaInicio = (List<DateTime>)ViewBag.ListaInicio;
    List<DateTime> ListaTermino = (List<DateTime>)ViewBag.ListaTermino;

}

<div class="col-md-3">
    <h4>Detalle de Indicador "Tiempo Medio para Reparar" de Equipo: "@Model.numeroAFI"</h4>
</div>
<div class="col-md-9">
    <div class="col-md-12">
        <h4><small>Filtro de fechas:</small></h4>
    </div>
    <div class="clearfix"></div>
    <div class="col-md-3">
        <select class="form-control agrupacion" id="agrupacion" name="agrupacion">
            <option value="semanal">Semanal</option>
            <option value="dosSemanas" @if (TipoAgrupacion.Equals("dosSemanas")) { <text> selected</text>}>Cada dos Semanas</option>
            <option value="mensual" @if (TipoAgrupacion.Equals("mensual")) { <text> selected</text>}>Mensual</option>
            <option value="bimensual" @if (TipoAgrupacion.Equals("bimensual")) { <text> selected</text>}>Bimensual</option>
            <option value="trimestral" @if (TipoAgrupacion.Equals("trimestral")) { <text> selected</text>}>Trimestral</option>
            <option value="semestral" @if (TipoAgrupacion.Equals("semestral")) { <text> selected</text>}>Semestral</option>
            <option value="anual" @if (TipoAgrupacion.Equals("anual")) { <text> selected</text>}>Anual</option>
        </select>
    </div>
    <div class="col-md-3">
        <input class="form-control fecha" id="fecha1" name="fecha1" data-val-date="Ingrese por favor una fecha." data-val-required="El campo fecha es obligatorio."
               data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
               type="text" value="@FECHA1">
    </div>
    <div class="col-md-3">
        <input class="form-control fecha" id="fecha2" name="fecha2" data-val-date="Ingrese por favor una fecha." data-val-required="El campo fecha es obligatorio."
               data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
               type="text" value="@FECHA2">
    </div>
    <div class="col-md-3">
        <input class="form-control" id="Boton" value="Buscar" type="button" />
    </div>
    <input value="@Model.ID" id="idEquipo" hidden />
</div>
<div class="clearfix"></div>
<hr />
<div class="col-md-6">
    <h5><strong>AFI Equipo: </strong>@Model.numeroAFI</h5>
    <h5><strong>Tipo Equipo: </strong>@Model.tipoEquipo</h5>
</div>
<div class="clearfix"></div>
<br />
<div class="table-responsive">
    <table class="table table-condensed">
        <tr>
            <th>Inicio</th>
            <th>Término</th>
            <th>Total Horas Detención</th>
            <th>Cantidad de Fallas</th>
            <th>Tiempo entre Fallas</th>
        </tr>

        @for (int i = 0; i < ListaTiempoMedioParaReparar.Count; i++)
        {
            <tr>
                <td>@RentaMaq.Models.Formateador.fechaCompletaToString(ListaInicio[i])</td>
                <td>@RentaMaq.Models.Formateador.fechaCompletaToString(ListaTermino[i])</td>
                <td>@ListaTiempoMedioParaReparar[i].totalHorasDetencion</td>
                <td>@ListaTiempoMedioParaReparar[i].cantidadTotalDetenciones Horas</td>
                <td>@(Math.Round(ListaTiempoMedioParaReparar[i].MTTR, 2)) Horas</td>
            </tr>
        }
    </table>
</div>
<div class="clearfix"></div>
<hr />
<div id="chartdiv" style="width: 100%; height: 400px; background-color: #FFFFFF;"></div>
<div class="clearfix"></div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/bootstrap-datetimepicker.css")
    @Scripts.Render("~/Scripts/datetimepicker/moment.js")
    @Scripts.Render("~/Scripts/datetimepicker/bootstrap-datetimepicker.js")

    <link href="~/amcharts/plugins/export/export.css" rel="stylesheet" type="text/css">
    <link href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".fecha").datetimepicker({
                viewMode: 'days',
                format: 'DD/MM/YYYY'
            });

            $(".agrupacion").select2();

            $("#Boton").click(function () {
                var fecha1 = $("#fecha1").val();
                var fecha2 = $("#fecha2").val();
                var idEquipo = $("#idEquipo").val();

                fecha1 = fecha1.replace("/", "-").replace("/", "-");
                fecha2 = fecha2.replace("/", "-").replace("/", "-");

                var agrupacion = $("#agrupacion").val();

                if (fecha1 == "" || fecha2 == "") {
                    alert("Debe ingresar ambas fechas");
                }
                else {
                    ruta = "/indicadoresDeMantencion/DetalleUtilizacion?id="+idEquipo+"&fechaInicio=" + fecha1 + "&fechaFinal=" + fecha2 + "&tipoAgrupacion=" + agrupacion;
                    console.log(ruta);
                    window.location.href = ruta
                }
            });
        });
    </script>


<script type="text/javascript" src="~/amcharts/amcharts.js"></script>
<script type="text/javascript" src="~/amcharts/serial.js"></script>
<script type="text/javascript" src="~/amcharts/themes/light.js"></script>
<script type="text/javascript" src="~/amcharts/plugins/export/export.min.js"></script>

<!-- amCharts javascript code -->
<script type="text/javascript">
    AmCharts.makeChart("chartdiv",
        {
            "type": "serial",
            "categoryField": "category",
            "startDuration": 1,
            "theme": "light",
            "categoryAxis": {
                "gridPosition": "start"
            },
            "trendLines": [],
            "graphs": [
                {
                    "balloonText": "Tiempo medio para reparar [[category]]: [[value]] horas",
                    "fillAlphas": 1,
                    "id": "AmGraph-1",
                    "title": "Tiempo Medio para Reparar",
                    "type": "column",
                    "valueField": "column-1"
                }
            ],
            "guides": [],
            "titles": [
		        {
		            "id": "Title-1",
		            "size": 15,
		            "text": "Tiempo medio para reparar de Equipo @Model.numeroAFI"
		        }
            ],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "title": "Tiempo Medio para Reparar"
                }
            ],
            "allLabels": [],
            "balloon": {},
            "legend": {
                "useGraphSettings": true
            },
            "dataProvider": [
                {
                    @for(int i=0;i<ListaTiempoMedioParaReparar.Count;i++)
                {
                    string Periodo = ListaInicio[i].Day + "/" + ListaInicio[i].Month + "/" + ListaInicio[i].Year +  " - "
                        + ListaTermino[i].Day + "/" + ListaTermino[i].Month + "/" + ListaTermino[i].Year;
                    <text>
                    "category": "@Periodo",
                    "column-1": @Math.Round(ListaTiempoMedioParaReparar[i].MTTR, 2).ToString().Replace(",", ".")
                 @if (i == ListaTiempoMedioParaReparar.Count - 1)
                 {
                    <text>
                    }
                    </text>
                 }
                 else {
                    <text>
            },
                    {
                        </text>
                 }
                        </text>
                }
                    ],
                    "export": {
                        "enabled": true,
                        "libs": {
                            "path": "/amcharts/plugins/export/libs/"
                        }
                    }
    }
    );
</script>
}

