@model RentaMaq.Models.ordenDeTrabajoGeneral

@{
    List<RentaMaq.Models.ejecutanteTrabajoOT> ejecutantesTrabajoOT = (List<RentaMaq.Models.ejecutanteTrabajoOT>)ViewData["ejecutantesTrabajoOT"];
    List<RentaMaq.Models.materialesRequeridosOT> materialesRequeridosOT = (List<RentaMaq.Models.materialesRequeridosOT>)ViewData["materialesRequeridosOT"];
    List<RentaMaq.Models.materialesUtilizadosOT> materialesUtilizadosOT = (List<RentaMaq.Models.materialesUtilizadosOT>)ViewData["materialesUtilizadosOT"];

    ViewBag.cantidadEjecutantes = ejecutantesTrabajoOT.Count;
    ViewBag.cantidadMatUt = materialesUtilizadosOT.Count;
    ViewBag.cantidadMatReq = materialesRequeridosOT.Count; 
    ViewBag.Title = "Editar Orden de Trabajo";
    
    string fechaOTAbierta = @RentaMaq.Models.Formateador.fechaCompletaToString(@Model.fechaOTAbierta);
    string fechaOTCerrada = @RentaMaq.Models.Formateador.fechaCompletaToString(@Model.fechaOTCerrada);
    string horasMantenimientoFecha = @RentaMaq.Models.Formateador.fechaCompletaToString(@Model.horasMantenimientoFecha);
    string fechaTrabajosPendientesPorRealizar = @RentaMaq.Models.Formateador.fechaCompletaToString(@Model.fechaTrabajosPendientesPorRealizar);                     
            
}

<h2>Editar Orden De Trabajo General</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <div class="form-group col-md-6">
                @Html.HiddenFor(model => model.ordenDeTrabajoGeneralID)
                @Html.LabelFor(model => model.numeroFolio, "Folio N°", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.numeroFolio, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.numeroFolio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fechaOTAbierta, "Fecha OT Abierta", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        <input class="form-control fecha" id="fechaOTAbierta" name="fechaOTAbierta" data-val-date="El valor debe ser una fecha." data-val-required="El campo fecha es obligatorio."
                               data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
                               type="text" value="@fechaOTAbierta" required">
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fechaOTCerrada, "Fecha OT Cerrada", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        <input class="form-control fecha" id="fechaOTCerrada" name="fechaOTCerrada" data-val-date="El valor debe ser una fecha." data-val-required="El campo fecha es obligatorio."
                               data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
                               type="text" value="@fechaOTCerrada" required">
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.operador, "Operador", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.operador, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.operador, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.faena, "Faena", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.faena, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.faena, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.area, "Area", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.turno, "Turno", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.turno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.turno, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.codigoInterno, "Codigo Interno", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.codigoInterno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.codigoInterno, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.patente, "Patente", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.patente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.patente, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.tipoEquipo, "Tipo Equipo", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.tipoEquipo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tipoEquipo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.modeloEquipo, "Modelo Equipo", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.modeloEquipo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modeloEquipo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.horometro, "Horometro", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.horometro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.horometro, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.kilometraje, "Kilometraje", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.kilometraje, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.kilometraje, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <h4>Tipo de Mantenimiento a Realizar</h4>
        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.tipoMantenimientoARealizar, "Tipo de Mantenimiento a Realizar", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                <div class="col-md-6">
                    <select class="form-control" name="tipoMantenimientoARealizar">
                        <option value="PM-1" @if (@Model.tipoMantenimientoARealizar.Equals("PM-1")) { <text>selected</text> }>PM-1</option>
                        <option value="PM-2" @if (@Model.tipoMantenimientoARealizar.Equals("PM-2")) { <text> selected</text> }>PM-2</option>
                        <option value="PM-3" @if (@Model.tipoMantenimientoARealizar.Equals("PM-3")) { <text> selected</text> }>PM-3</option>
                        <option value="PM-4" @if (@Model.tipoMantenimientoARealizar.Equals("PM-4")) { <text> selected</text> }>PM-4</option>
                        <option value="Preventivo" @if (@Model.tipoMantenimientoARealizar.Equals("Preventivo")) { <text> selected</text> }>Preventivo</option>
                        <option value="Mejorativo" @if (@Model.tipoMantenimientoARealizar.Equals("Mejorativo")) { <text> selected</text> }>Mejorativo</option>
                        <option value="Predictivo" @if (@Model.tipoMantenimientoARealizar.Equals("Predictivo")) { <text> selected</text> }>Predictivo</option>
                        <option value="Correctivo" @if (@Model.tipoMantenimientoARealizar.Equals("Correctivo")) { <text> selected</text> }>Correctivo</option>
                        <option value="Otros" @if (@Model.tipoMantenimientoARealizar.Equals("Otros")) { <text> selected</text> }>Otros</option>
                    </select>
                </div>
            </div>
        </div>
        <hr />


        <div class="table-responsive" id="contenedorEjecutantes">
            <table class="table" id="tableEjecutantes">
                <thead>
                    <tr>
                        <th>Ejecutantes del Trabajo</th>
                        <th>Cargo</th>
                        <th>HH</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tbodyEjecutantes">
                    @if (ViewBag.cantidadEjecutantes==0)
                    {
                        <tr>
                            <td>
                                <input class="form-control ejecutanteDelTrabajo" type="text" name="ejecutanteDelTrabajo" />
                            </td>
                            <td>
                                <input class="form-control cargo" type="text" name="cargo" />
                            </td>
                            <td>
                                <input class="form-control HH" type="number" name="HH" />
                            </td>
                            <td>
                                <a class="btn btn-danger botonEliminarEjecutante" id="botonEliminarEjecutante"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (RentaMaq.Models.ejecutanteTrabajoOT ejecutante in ejecutantesTrabajoOT)
                        {
                            <tr>
                                <td>
                                    <input class="form-control ejecutanteDelTrabajo" type="text" name="ejecutanteDelTrabajo" value="@ejecutante.nombreTrabajador"/>
                                </td>
                                <td>
                                    <input class="form-control cargo" type="text" name="cargo" value="@ejecutante.cargo"/>
                                </td>
                                <td>
                                    <input class="form-control HH" type="number" name="HH" value="@ejecutante.HH"/>
                                </td>
                                <td>
                                    <a class="btn btn-danger botonEliminarEjecutante" id="botonEliminarEjecutante"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                                </td>
                            </tr>
                        }
                    }                    
                </tbody>
            </table>

            <div class="col-sm-2">
                <a id="botonAgregarEjecutante" class="btn btn-block btn-primary botonAgregarEjecutante"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Agregar Ejecutante</a>
            </div>
            <br />
        </div>
        <hr />





        <br />
        <h4>Horas en Mantenimiento</h4>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.horasMantenimientoNivelCombustible, "Nivel Combustible", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    <select class="form-control" name="horasMantenimientoNivelCombustible">
                        <option value="0" @if (@Model.horasMantenimientoNivelCombustible.Equals("0")) { <text> selected</text> }>0</option>
                        <option value="0.05" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.05")) { <text> selected</text> }>0.05</option>
                        <option value="0.10" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.10")) { <text> selected</text> }>0.10</option>
                        <option value="0.15" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.15")) { <text> selected</text> }>0.15</option>
                        <option value="0.20" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.20")) { <text> selected</text> }>0.20</option>
                        <option value="0.25" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.25")) { <text> selected</text> }>0.25</option>
                        <option value="0.30" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.30")) { <text> selected</text> }>0.30</option>
                        <option value="0.35" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.35")) { <text> selected</text> }>0.35</option>
                        <option value="0.40" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.40")) { <text> selected</text> }>0.40</option>
                        <option value="0.45" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.45")) { <text> selected</text> }>0.45</option>
                        <option value="0.50" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.50")) { <text> selected</text> }>0.50</option>
                        <option value="0.55" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.55")) { <text> selected</text> }>0.55</option>
                        <option value="0.60" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.60")) { <text> selected</text> }>0.60</option>
                        <option value="0.65" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.65")) { <text> selected</text> }>0.65</option>
                        <option value="0.70" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.70")) { <text> selected</text> }>0.70</option>
                        <option value="0.75" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.75")) { <text> selected</text> }>0.75</option>
                        <option value="0.80" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.80")) { <text> selected</text> }>0.80</option>
                        <option value="0.85" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.85")) { <text> selected</text> }>0.85</option>
                        <option value="0.90" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.90")) { <text> selected</text> }>0.90</option>
                        <option value="0.95" @if (@Model.horasMantenimientoNivelCombustible.Equals("0.95")) { <text> selected</text> }>0.95</option>
                        <option value="1" @if (@Model.horasMantenimientoNivelCombustible.Equals("1")) { <text> selected</text> }>1</option>

                    </select>
                    <label>Empty:0/Full:1</label>

                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.horasMantenimientoFecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    <input class="form-control fecha" id="horasMantenimientoFecha" name="horasMantenimientoFecha" data-val-date="El valor debe ser una fecha." data-val-required="El campo fecha es obligatorio."
                           data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
                           type="text" value="@horasMantenimientoFecha" required>
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.horasMantenimientoHRInicio, "HR Inicio", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.horasMantenimientoHRInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.horasMantenimientoHRInicio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.horasMantenimientoHRTermino, "HR Termino", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.horasMantenimientoHRTermino, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.horasMantenimientoHRTermino, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.horasMantenimientoHRSDetenido, "HRS Detenido", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.horasMantenimientoHRSDetenido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.horasMantenimientoHRSDetenido, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />
        <div class="row">
            <div class="form-group col-md-12">
                <h4>Trabajo por Realizar</h4>
                <div class="col-md-12">
                    <textarea class="form-control" name="trabajoRealizar" id="trabajoRealizar" style="max-width: 100% !important; width:100%;">@Model.trabajoRealizar</textarea>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="form-group col-md-12">
                <h4>Conclusiones Del Trabajo Realizado</h4>
                <div class="col-md-12">
                    <textarea class="form-control" name="conclusionesTrabajoRealizado" id="conclusionesTrabajoRealizado" style="max-width: 100% !important; width:100%;">@Model.conclusionesTrabajoRealizado</textarea>
                </div>
                <br />
                <div class="col-md-8">
                    @Html.LabelFor(model => model.estadoEquipo, "Estado Equipo", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <div class="col-md-6">
                        <select class="form-control" name="estadoEquipo" id="estadoEquipo">
                            <option value="Operativo" @if (@Model.estadoEquipo.Equals("Operativo")) { <text> selected</text> }>Operativo</option>
                            <option value="Detenido" @if (@Model.estadoEquipo.Equals("Detenido")) { <text> selected</text> }>Detenido</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="form-group col-md-12">
                <h4>Trabajos Pendientes por Realizar</h4>
                <div class="col-md-12">
                    <textarea class="form-control" name="trabajosPendientesPorRealizar" id="trabajosPendientesPorRealizar" style="max-width: 100% !important; width:100%;">@Model.trabajosPendientesPorRealizar</textarea>
                </div>
                <br />
                <div class="col-md-8">
                    @Html.LabelFor(model => model.fechaTrabajosPendientesPorRealizar, "Fecha Plazo Trabajo Pendiente", htmlAttributes: new { @class = "control-label col-md-6", @style = "text-align: left !important;" })
                    <input class="form-control fecha" id="fechaTrabajosPendientesPorRealizar" name="fechaTrabajosPendientesPorRealizar" data-val-date="El valor debe ser una fecha." data-val-required="El campo fecha es obligatorio."
                           data-date-format="DD/MM/YYYY" pattern="[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9]"
                           type="text" value="@fechaTrabajosPendientesPorRealizar" required>
                </div>
            </div>
        </div>
        <hr />
        <br />        
        <div class="table-responsive">
            <label class="control-label col-md-6">Materiales Utilizados</label>
            <table class="table" id="tableMaterialesUtilizados">
                <thead>
                    <tr>
                        <th>Materiales Utilizados</th>
                        <th>Cantidad</th>
                        <th>N° Parte</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (ViewBag.cantidadMatUt==0)
                    { 
                        <tr>
                            <td>
                                <input class="form-control materialUtilizado" type="text" name="materialUtilizado" />
                            </td>
                            <td>
                                <input class="form-control matUtcantidad" type="text" name="matUtcantidad" />
                            </td>
                            <td>
                                <input class="form-control matUtNumeroParte" type="text" name="matUtNumeroParte" />
                            </td>
                            <td>    
                                <a class="btn btn-danger botonEliminarMatUt"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                            </td>
                        </tr>
                    }
                    else {
                        foreach (RentaMaq.Models.materialesUtilizadosOT matUt in materialesUtilizadosOT)
                        {
                            <tr>
                                <td>
                                    <input class="form-control materialUtilizado" type="text" name="materialUtilizado" value="@matUt.nombreMaterial" />
                                </td>
                                <td>
                                    <input class="form-control matUtcantidad" type="text" name="matUtcantidad" value="@matUt.cantidad"/>
                                </td>
                                <td>
                                    <input class="form-control matUtNumeroParte" type="text" name="matUtNumeroParte" value="@matUt.numeroParte" />
                                </td>
                                <td>
                                    <a class="btn btn-danger botonEliminarMatUt"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                                </td>
                            </tr>
                        }

                    }
                </tbody>
            </table>

            <div class="col-sm-3">
                <a id="botonAgregarMaterialUtilizado" class="btn btn-block btn-primary botonAgregarMaterialUtilizado"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Agregar Material Utilizado</a>
            </div>
            <br />
        </div>

        <br />
        <br />
        <div class="table-responsive">
            <label class="control-label col-md-6">Materiales Requeridos</label>
            <table class="table" id="tableMaterialesRequeridos">
                <thead>
                    <tr>
                        <th>Materiales Requeridos</th>
                        <th>Cantidad</th>
                        <th>N° Parte</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (ViewBag.cantidadMatReq==0)
                    {
                        <tr>
                            <td>
                                <input class="form-control materialRequerido" type="text" name="materialRequerido" />
                            </td>
                            <td>
                                <input class="form-control matReqCantidad" type="text" name="matReqCantidad" />
                            </td>
                            <td>
                                <input class="form-control matReqNumeroParte" type="text" name="matReqNumeroParte" />
                            </td>
                            <td>
                                <a class="btn btn-danger botonEliminarMatReq"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                            </td>
                        </tr>
                    }
                    else { 
                    
                        foreach (RentaMaq.Models.materialesRequeridosOT matReq in materialesRequeridosOT)
                        {
                            <tr>
                                <td>
                                    <input class="form-control materialRequerido" type="text" name="materialRequerido" value="@matReq.nombreMaterial" />
                                </td>
                                <td>
                                    <input class="form-control matReqCantidad" type="text" name="matReqCantidad" value="@matReq.cantidad" />
                                </td>
                                <td>
                                    <input class="form-control matReqNumeroParte" type="text" name="matReqNumeroParte" value="@matReq.numeroParte" />
                                </td>
                                <td>
                                    <a class="btn btn-danger botonEliminarMatReq"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <div class="col-sm-3">
                <a id="botonAgregarMaterialRequerido" class="btn btn-block btn-primary botonAgregarMaterialRequerido"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Agregar Material Requerido</a>
            </div>
            <br />
        </div>


        <br /><br />
        <div class="row">
            <div class="form-group col-md-12">
                <div class="col-md-offset-10 col-lg-12">
                    <input type="submit" value="Guardar OT" class="btn btn-success btn-lg btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a Lista de Ordenes de Trabajo", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/bootstrap-datetimepicker.css")
    @Scripts.Render("~/Scripts/datetimepicker/moment.js")
    @Scripts.Render("~/Scripts/datetimepicker/bootstrap-datetimepicker.js")
    <script>
        $(document).ready(function () {
            var numeroItem = @ViewBag.cantidadEjecutantes;
            if(numeroItem==0){
                numeroItem=1;
            }
            var numeroMatUt = @ViewBag.cantidadMatUt;
            if(numeroMatUt==0){
                numeroMatUt=1;
            }
            var numeroMatReq = @ViewBag.cantidadMatReq;
            if(numeroMatReq==0){
                numeroMatReq=1;
            }
            $(".fecha").datetimepicker({
                viewMode: 'days',
                format: 'DD/MM/YYYY'
            });

            $(".botonAgregarEjecutante").click(function () {

                numeroItem++;
                var $tableBody = $('#tableEjecutantes').find("tbody");
                $trLast = $tableBody.find("tr:last");

                $temp = $trLast.clone();

                $temp.find('.ejecutanteDelTrabajo').val('');
                $temp.find('.cargo').val('');
                $temp.find('.HH').val('');

                $trNew = $temp;
                $trLast.after($trNew);
                return false;
            });
            $(document).on("click", ".botonEliminarEjecutante", function () {
                var element = this;
                if (numeroItem > 1) {
                    $(element).closest('tr').remove();
                    numeroItem--;
                } else {
                    alert("No puede eliminar este trabajador , ya que la OT debe por lo menos tener uno.")
                }
                return false;
            });




            $(".botonAgregarMaterialUtilizado").click(function () {
                numeroMatUt++;
                var $tableBody = $('#tableMaterialesUtilizados').find("tbody");
                $trLast = $tableBody.find("tr:last");

                $temp = $trLast.clone();

                $temp.find('.materialUtilizado').val('');
                $temp.find('.matUtcantidad').val('');
                $temp.find('.matUtNumeroParte').val('');

                $trNew = $temp;
                $trLast.after($trNew);
                return false;
            });
            $(document).on("click", ".botonEliminarMatUt", function () {
                var element = this;
                if (numeroMatUt > 1) {
                    $(element).closest('tr').remove();
                    numeroMatUt--;
                } else {
                    alert("Imposible Eliminar. Debe existir aunque este vacio.")
                }
                return false;
            });




            $(".botonAgregarMaterialRequerido").click(function () {

                numeroMatReq++;
                var $tableBody = $('#tableMaterialesRequeridos').find("tbody");
                $trLast = $tableBody.find("tr:last");

                $temp = $trLast.clone();

                $temp.find('.materialRequerido').val('');
                $temp.find('.matReqCantidad').val('');
                $temp.find('.matReqNumeroParte').val('');

                $trNew = $temp;
                $trLast.after($trNew);
                return false;
            });


            $(document).on("click", ".botonEliminarMatReq", function () {
                var element = this;
                if (numeroMatReq > 1) {
                    $(element).closest('tr').remove();
                    numeroMatReq--;
                } else {
                    alert("Imposible Eliminar. Debe existir aunque este vacio.")
                }
                return false;
            });


        });



    </script>


}
